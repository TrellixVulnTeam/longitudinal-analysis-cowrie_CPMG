                                 __               
  _________ _      ___________ _/ /_  ______  ___ 
 / ___/ __ \ | /| / / ___/ __ `/ / / / /_  / / _ \
/ /__/ /_/ / |/ |/ / /  / /_/ / / /_/ / / /_/  __/
\___/\____/|__/|__/_/   \__,_/_/\__, / /___/\___/ 
                               /____/             

Usage: cli.py analyze-local [OPTIONS]

  Map-Reduce all log files in local folder, create reduced.json, create
  result.html for visualization.

Options:
  -p, --path PATH             Local folder path to look for log files to map
                              reduce and analyze  [required]

  -f, --logfile TEXT          Filename of reduced log file of generated *.json
  -o, --outfile TEXT          Filename of result visualization *.html
  -n, --top_n_events INTEGER  Reduce & visualize top n occurring events in
                              cowrie log files

  -t, --threshold FLOAT       Percentagef event changes visible in report,
                              e.g. user:password increased > x %

  -n, --last_n_days INTEGER   Create statistics for specific event of %
                              increase for last n days across honeypots

  --help                      Show this message and exit.
                                 __               
  _________ _      ___________ _/ /_  ______  ___ 
 / ___/ __ \ | /| / / ___/ __ `/ / / / /_  / / _ \
/ /__/ /_/ / |/ |/ / /  / /_/ / / /_/ / / /_/  __/
\___/\____/|__/|__/_/   \__,_/_/\__, / /___/\___/ 
                               /____/             

Usage: cli.py analyze-remote [OPTIONS]

  Map-Reduce all log files on remote cowrie node, download reduced.json,
  create result.html for visualization.

Options:
  -i, --ip TEXT                   IP Address of remote droplet  [required]
  -p, --port TEXT                 Port of remote droplet (real SSH port of
                                  server, not cowrie port)  [required]

  -u, --user TEXT                 Login username of remote droplet
  -pw, --pw TEXT                  Login password of remote droplet  [required]
  -n, --top_n_events TEXT         Reduce & visualize top n occurring events in
                                  cowrie log files

  -r, --setup_remote_environment TEXT
                                  Setup python environment and copy scripts to
                                  remote node (only first time needed)

  -f, --logfile TEXT              Filename of reduced log file of generated
                                  *.json

  -o, --outfile TEXT              Filename of result visualization *.html
  -t, --threshold FLOAT           Percentage of event changes visible in
                                  report, e.g. user:password increased > x %

  -l, --last_n_days INTEGER       Create statistics for specific event of %
                                  increase for last n days across honeypots

  --help                          Show this message and exit.
                                 __               
  _________ _      ___________ _/ /_  ______  ___ 
 / ___/ __ \ | /| / / ___/ __ `/ / / / /_  / / _ \
/ /__/ /_/ / |/ |/ / /  / /_/ / / /_/ / / /_/  __/
\___/\____/|__/|__/_/   \__,_/_/\__, / /___/\___/ 
                               /____/             

Usage: cli.py analyze-remote [OPTIONS]

  Map-Reduce all log files on remote cowrie node, download reduced.json,
  create result.html for visualization.

Options:
  -i, --ip TEXT                   IP Address of remote droplet  [required]
  -p, --port TEXT                 Port of remote droplet (real SSH port of
                                  server, not cowrie port)  [required]

  -u, --user TEXT                 Login username of remote droplet
  -pw, --pw TEXT                  Login password of remote droplet  [required]
  -n, --top_n_events TEXT         Reduce & visualize top n occurring events in
                                  cowrie log files

  -r, --setup_remote_environment TEXT
                                  Setup python environment and copy scripts to
                                  remote node (only first time needed)

  -f, --logfile TEXT              Filename of reduced log file of generated
                                  *.json

  -o, --outfile TEXT              Filename of result visualization *.html
  -t, --threshold FLOAT           Percentage of event changes visible in
                                  report, e.g. user:password increased > x %

  -l, --last_n_days INTEGER       Create statistics for specific event of %
                                  increase for last n days across honeypots

  --help                          Show this message and exit.
                                 __               
  _________ _      ___________ _/ /_  ______  ___ 
 / ___/ __ \ | /| / / ___/ __ `/ / / / /_  / / _ \
/ /__/ /_/ / |/ |/ / /  / /_/ / / /_/ / / /_/  __/
\___/\____/|__/|__/_/   \__,_/_/\__, / /___/\___/ 
                               /____/             

Usage: cli.py combine-reduced [OPTIONS] FILES...

  Combine reduced.json files from multiple nodes to single reduced.json
  Params:     files    (str, n): Filename/s of result.json files to combine
  outfile     (str): Filename of final output *.json Returns:     Creates
  file.json with combined reduced file data

Options:
  -o, --outfile TEXT  Filename of final output *.json
  --help              Show this message and exit.
                                 __               
  _________ _      ___________ _/ /_  ______  ___ 
 / ___/ __ \ | /| / / ___/ __ `/ / / / /_  / / _ \
/ /__/ /_/ / |/ |/ / /  / /_/ / / /_/ / / /_/  __/
\___/\____/|__/|__/_/   \__,_/_/\__, / /___/\___/ 
                               /____/             

Usage: cli.py command-chains [OPTIONS]

  Use cowrie.json.YYYY-MM-DD file to trace commands executed for all
  sessions in Sankey-Plot.

Options:
  -f, --file PATH          Filename of log file to create trace of commands
                           executed  [required]

  -t, --threshold INTEGER  Threshold of how often command had to be executed
                           to be visible in Sankey Plot

  --help                   Show this message and exit.
                                 __               
  _________ _      ___________ _/ /_  ______  ___ 
 / ___/ __ \ | /| / / ___/ __ `/ / / / /_  / / _ \
/ /__/ /_/ / |/ |/ / /  / /_/ / / /_/ / / /_/  __/
\___/\____/|__/|__/_/   \__,_/_/\__, / /___/\___/ 
                               /____/             

Usage: cli.py analyze-remote [OPTIONS]

  Map-Reduce all log files on remote cowrie node, download reduced.json,
  create result.html for visualization.

Options:
  -i, --ip TEXT                   IP Address of remote droplet  [required]
  -p, --port TEXT                 Port of remote droplet (real SSH port of
                                  server, not cowrie port)  [required]

  -u, --user TEXT                 Login username of remote droplet
  -pw, --pw TEXT                  Login password of remote droplet  [required]
  -n, --top_n_events TEXT         Reduce & visualize top n occurring events in
                                  cowrie log files

  -r, --setup_remote_environment TEXT
                                  Setup python environment and copy scripts to
                                  remote node (only first time needed)

  -f, --logfile TEXT              Filename of reduced log file of generated
                                  *.json

  -o, --outfile TEXT              Filename of result visualization *.html
  -t, --threshold FLOAT           Percentage of event changes visible in
                                  report, e.g. user:password increased > x %

  -l, --last_n_days INTEGER       Create statistics for specific event of %
                                  increase for last n days across honeypots

  --help                          Show this message and exit.
